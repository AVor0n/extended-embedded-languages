{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "comment": "This file has been automatically generated by syntax_assembler.js\nDO NOT HAND EDIT IT - changes will be lost.",
  "injectionSelector": "L:source.js -string -comment",
  "scopeName": "source.js.embedded.codeblock",
  "patterns": [
    {
      "include": "#template-string-with-tag"
    },
    {
      "include": "#template-string-with-preceeding-comment"
    }
  ],
  "repository": {
    "template-string-with-preceeding-comment": {
      "comment": "These patterns all match Javascript template strings and select one language.The syntax is injected into https://github.com/microsoft/vscode/blob/main/extensions/javascript/syntaxes/JavaScript.tmLanguage.json",
      "patterns": [
        {
          "comment": "Batch formatted template strings",
          "begin": "(?x) (/\\*(?i:bat)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.bat.javascript source.batchfile",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.batchfile"
            }
          ]
        },
        {
          "comment": "C++ formatted template strings",
          "begin": "(?x) (/\\*(?i:cpp|c\\+\\+)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.cpp.javascript source.cpp",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.cpp"
            }
          ]
        },
        {
          "comment": "CSS formatted template strings",
          "begin": "(?x) (/\\*(?i:css)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.css.javascript source.css",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.css"
            }
          ]
        },
        {
          "comment": "HTML formatted template strings",
          "begin": "(?x) (/\\*(?i:html)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.html.javascript text.html.derivative",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "text.html.derivative"
            }
          ]
        },
        {
          "comment": "INI formatted template strings",
          "begin": "(?x) (/\\*(?i:ini)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.ini.javascript source.ini",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.ini"
            }
          ]
        },
        {
          "comment": "Javascript formatted template strings",
          "begin": "(?x) (/\\*(?i:js|javascript)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.javascript.javascript source.js",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.js"
            }
          ]
        },
        {
          "comment": "JSON formatted template strings",
          "begin": "(?x) (/\\*(?i:json)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.json.javascript source.json",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.json"
            }
          ]
        },
        {
          "comment": "JSONC formatted template strings",
          "begin": "(?x) (/\\*(?i:jsonc)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.jsonc.javascript source.jsonc",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.jsonc"
            }
          ]
        },
        {
          "comment": "Python formatted template strings",
          "begin": "(?x) (/\\*(?i:py|python)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.python.javascript source.python",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.python"
            }
          ]
        },
        {
          "comment": "Shell formatted template strings",
          "begin": "(?x) (/\\*(?i:sh|bash|shell|shellscript)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.shell.javascript source.shell",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.shell"
            }
          ]
        },
        {
          "comment": "SQL formatted template strings",
          "begin": "(?x) (/\\*(?i:sql)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.sql.javascript source.sql",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.sql"
            }
          ]
        },
        {
          "comment": "TOML formatted template strings",
          "begin": "(?x) (/\\*(?i:toml)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.toml.javascript source.toml",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.toml"
            }
          ]
        },
        {
          "comment": "XML formatted template strings",
          "begin": "(?x) (/\\*(?i:xml)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.xml.javascript text.xml",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "text.xml"
            }
          ]
        },
        {
          "comment": "YAML formatted template strings",
          "begin": "(?x) (/\\*(?i:yaml)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.yaml.javascript source.yaml",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.yaml"
            }
          ]
        },
        {
          "comment": "C formatted template strings",
          "begin": "(?x) (/\\*(?i:c)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.c.javascript source.c",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.c"
            }
          ]
        },
        {
          "comment": "HLSL formatted template strings",
          "begin": "(?x) (/\\*(?i:hlsl)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.hlsl.javascript source.hlsl",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.hlsl"
            }
          ]
        },
        {
          "comment": "GLSL formatted template strings",
          "begin": "(?x) (/\\*(?i:glsl)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.glsl.javascript source.glsl",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.glsl"
            }
          ]
        },
        {
          "comment": "Metal formatted template strings",
          "begin": "(?x) (/\\*(?i:metal)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.metal.javascript source.metal",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.metal"
            }
          ]
        },
        {
          "comment": "WGSL formatted template strings",
          "begin": "(?x) (/\\*(?i:wgsl)\\*/) \\s* ([_\\$[:alpha:]][_\\$[:alnum:]]*)? (\\`)",
          "contentName": "meta.embedded.string.raw.wgsl.javascript source.wgsl",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "source.js#comment"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.tagged-template.js"
            },
            "3": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.wgsl"
            }
          ]
        }
      ]
    },
    "template-string-with-tag": {
      "comment": "These patterns all match Javascript template strings and select one language.The syntax is injected into https://github.com/microsoft/vscode/blob/main/extensions/javascript/syntaxes/JavaScript.tmLanguage.json",
      "patterns": [
        {
          "comment": "Batch formatted template strings",
          "begin": "(?x) (?i:bat) (\\`)",
          "contentName": "meta.embedded.string.raw.bat.javascript source.batchfile",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.batchfile"
            }
          ]
        },
        {
          "comment": "C++ formatted template strings",
          "begin": "(?x) (?i:cpp|c\\+\\+) (\\`)",
          "contentName": "meta.embedded.string.raw.cpp.javascript source.cpp",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.cpp"
            }
          ]
        },
        {
          "comment": "CSS formatted template strings",
          "begin": "(?x) (?i:css) (\\`)",
          "contentName": "meta.embedded.string.raw.css.javascript source.css",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.css"
            }
          ]
        },
        {
          "comment": "HTML formatted template strings",
          "begin": "(?x) (?i:html) (\\`)",
          "contentName": "meta.embedded.string.raw.html.javascript text.html.derivative",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "text.html.derivative"
            }
          ]
        },
        {
          "comment": "INI formatted template strings",
          "begin": "(?x) (?i:ini) (\\`)",
          "contentName": "meta.embedded.string.raw.ini.javascript source.ini",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.ini"
            }
          ]
        },
        {
          "comment": "Javascript formatted template strings",
          "begin": "(?x) (?i:js|javascript) (\\`)",
          "contentName": "meta.embedded.string.raw.javascript.javascript source.js",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.js"
            }
          ]
        },
        {
          "comment": "JSON formatted template strings",
          "begin": "(?x) (?i:json) (\\`)",
          "contentName": "meta.embedded.string.raw.json.javascript source.json",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.json"
            }
          ]
        },
        {
          "comment": "JSONC formatted template strings",
          "begin": "(?x) (?i:jsonc) (\\`)",
          "contentName": "meta.embedded.string.raw.jsonc.javascript source.jsonc",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.jsonc"
            }
          ]
        },
        {
          "comment": "Python formatted template strings",
          "begin": "(?x) (?i:py|python) (\\`)",
          "contentName": "meta.embedded.string.raw.python.javascript source.python",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.python"
            }
          ]
        },
        {
          "comment": "Shell formatted template strings",
          "begin": "(?x) (?i:sh|bash|shell|shellscript) (\\`)",
          "contentName": "meta.embedded.string.raw.shell.javascript source.shell",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.shell"
            }
          ]
        },
        {
          "comment": "SQL formatted template strings",
          "begin": "(?x) (?i:sql) (\\`)",
          "contentName": "meta.embedded.string.raw.sql.javascript source.sql",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.sql"
            }
          ]
        },
        {
          "comment": "TOML formatted template strings",
          "begin": "(?x) (?i:toml) (\\`)",
          "contentName": "meta.embedded.string.raw.toml.javascript source.toml",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.toml"
            }
          ]
        },
        {
          "comment": "XML formatted template strings",
          "begin": "(?x) (?i:xml) (\\`)",
          "contentName": "meta.embedded.string.raw.xml.javascript text.xml",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "text.xml"
            }
          ]
        },
        {
          "comment": "YAML formatted template strings",
          "begin": "(?x) (?i:yaml) (\\`)",
          "contentName": "meta.embedded.string.raw.yaml.javascript source.yaml",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.yaml"
            }
          ]
        },
        {
          "comment": "C formatted template strings",
          "begin": "(?x) (?i:c) (\\`)",
          "contentName": "meta.embedded.string.raw.c.javascript source.c",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.c"
            }
          ]
        },
        {
          "comment": "HLSL formatted template strings",
          "begin": "(?x) (?i:hlsl) (\\`)",
          "contentName": "meta.embedded.string.raw.hlsl.javascript source.hlsl",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.hlsl"
            }
          ]
        },
        {
          "comment": "GLSL formatted template strings",
          "begin": "(?x) (?i:glsl) (\\`)",
          "contentName": "meta.embedded.string.raw.glsl.javascript source.glsl",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.glsl"
            }
          ]
        },
        {
          "comment": "Metal formatted template strings",
          "begin": "(?x) (?i:metal) (\\`)",
          "contentName": "meta.embedded.string.raw.metal.javascript source.metal",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.metal"
            }
          ]
        },
        {
          "comment": "WGSL formatted template strings",
          "begin": "(?x) (?i:wgsl) (\\`)",
          "contentName": "meta.embedded.string.raw.wgsl.javascript source.wgsl",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tagged-template.js"
            },
            "2": {
              "name": "string.template.js punctuation.definition.string.template.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "string.template.js punctuation.definition.string.template.end.js"
            }
          },
          "patterns": [
            {
              "include": "#template-substitution-element"
            },
            {
              "include": "#string-character-escape"
            },
            {
              "include": "source.wgsl"
            }
          ]
        }
      ]
    }
  }
}