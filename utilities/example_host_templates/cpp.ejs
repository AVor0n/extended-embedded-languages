#include <iostream>

// Usage:
// In C++ we use raw strings with a tag to indicate the embedded language.
// The tag must begin with the embedded languages' ID (see docs)

//////////////////////////////////////////////////////////////////////
// Documentation Examples:

auto s1 = R"json(
  {"a": "b", "c": [1,2,3]}
)json";

auto s2 = R"sql(
    SELECT * FROM USERS
    WHERE id = 1234;
)sql";

auto s3 = R"py(
    if __name__ == "__main__":
        print("hello world!")
)py";

//////////////////////////////////////////////////////////////////////
// Embedded Examples:
// These are examples of all the embedded languages 

<% snippets.forEach(function(snippet){ %>
//////////////////////////////////////////////////////////////////////
// <%= snippet.name %> Example
static const char* <%= snippet.ids[0] %>_string = R"<%=
snippet.ids[0] %>(
<%-snippet.code%>
)<%= snippet.ids[0] %>";

<% }); %>


//////////////////////////////////////////////////////////////////////
// Test cases - these should all be HIGHLIGHTED
auto s1 = R"sql(SELECT foo FROM bar;)sql";

auto s2 = R"sql(
    SELECT foo FROM bar;
)sql";

auto s3 = R"sql:abc(
    SELECT foo FROM bar
)sql:abc";

auto s4 = u8R"sql(SELECT foo FROM bar;)sql";
auto s5 = LR"sql(SELECT foo FROM bar;)sql";
auto s6 = UR"sql(SELECT foo FROM bar;)sql";

#define x R"sql(SELECT foo FROM bar;)sql";


//////////////////////////////////////////////////////////////////////
// Test cases - these should all be UNHIGHLIGHTED

//R"sql(SELECT foo FROM bar;)sql";
/*
    R"sql(SELECT foo FROM bar;)sql";
*/

auto s7 = "SELECT foo FROM bar";

auto s8 = R"outer( 
    R"sql(SELECT foo FROM bar;)sql";
)outer";

#if 0
#error R"sql(SELECT foo FROM bar;)sql"
#endif

//////////////////////////////////////////////////////////////////////
// Regular C++ code - to make sure embedded languages aren't leaking

#define FOOBAR(...) __VA_ARGS__
template<typename T> void run_obj(const T& t) { t.run(); }
